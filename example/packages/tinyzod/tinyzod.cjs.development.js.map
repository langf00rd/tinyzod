{"version":3,"file":"tinyzod.cjs.development.js","sources":["../src/client.ts","../src/lib/constants.ts","../src/lib/logger.ts","../src/lib/send.ts"],"sourcesContent":["import { TinyZodClientProps } from './interface';\n\nexport class TinyZodClient {\n  apiKey: string;\n  showLogs: boolean;\n  constructor({ apiKey, showLogs }: TinyZodClientProps) {\n    this.apiKey = apiKey;\n    this.showLogs = showLogs ?? false;\n  }\n}\n","const TINYBIRD_API_BASE_URL = 'https://api.tinybird.co/';\nexport { TINYBIRD_API_BASE_URL };\n","import { TinyZodClientProps } from '../interface';\n/** log info to console */\nexport function logger(client: TinyZodClientProps, message: string | any) {\n  if (client.showLogs) console.log(message);\n}\n","import { TinyZodSendProps } from '../interface';\nimport { TINYBIRD_API_BASE_URL } from './constants';\nimport { logger } from './logger';\n\n/** sends an event to tinybird */\nexport async function send({\n  client,\n  schema,\n  data,\n  dataSource,\n  query,\n}: TinyZodSendProps): Promise<{\n  status: number;\n  response: Response;\n}> {\n  logger(client, 'sending data to tinybird...');\n\n  const parsedData = schema.safeParse(data);\n  if (!parsedData.success) throw { error: parsedData.error.issues };\n\n  try {\n    const response = await fetch(\n      `${TINYBIRD_API_BASE_URL}v0/datasources?name=${dataSource}&${query}`,\n      {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${client.apiKey}`,\n          'Content-Type': 'application/plain',\n        },\n        body: parsedData.data,\n      }\n    );\n    return {\n      status: response.status,\n      response,\n    };\n  } catch (error) {\n    logger(client, error);\n    throw Error(error as any);\n  }\n}\n"],"names":["TinyZodClient","_ref","apiKey","showLogs","TINYBIRD_API_BASE_URL","logger","client","message","console","log","send","_x","_send","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","schema","data","dataSource","query","parsedData","response","wrap","_callee$","_context","prev","next","safeParse","success","error","issues","fetch","method","headers","Authorization","body","sent","abrupt","status","t0","Error","stop"],"mappings":"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"}