{"version":3,"file":"tinyzod.cjs.production.min.js","sources":["../src/lib/logger.ts","../src/lib/send.ts","../src/client.ts"],"sourcesContent":["import { TinyZodClientProps } from '../interface';\n/** log info to console */\nexport function logger(client: TinyZodClientProps, message: string | any) {\n  if (client.showLogs) console.log(message);\n}\n","import { TinyZodSendProps } from '../interface';\nimport { TINYBIRD_API_BASE_URL } from './constants';\nimport { logger } from './logger';\n\n/** sends an event to tinybird */\nexport async function send({\n  client,\n  schema,\n  data,\n  dataSource,\n  query,\n}: TinyZodSendProps): Promise<{\n  status: number;\n  response: Response;\n}> {\n  logger(client, 'sending data to tinybird...');\n\n  const parsedData = schema.safeParse(data);\n  if (!parsedData.success) throw { error: parsedData.error.issues };\n\n  try {\n    const response = await fetch(\n      `${TINYBIRD_API_BASE_URL}v0/datasources?name=${dataSource}&${query}`,\n      {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${client.apiKey}`,\n          'Content-Type': 'application/plain',\n        },\n        body: parsedData.data,\n      }\n    );\n    return {\n      status: response.status,\n      response,\n    };\n  } catch (error) {\n    logger(client, error);\n    throw Error(error as any);\n  }\n}\n","import { TinyZodClientProps } from './interface';\n\nexport class TinyZodClient {\n  apiKey: string;\n  showLogs: boolean;\n  constructor({ apiKey, showLogs }: TinyZodClientProps) {\n    this.apiKey = apiKey;\n    this.showLogs = showLogs ?? false;\n  }\n}\n"],"names":["logger","client","message","showLogs","console","log","_send","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","schema","data","dataSource","query","parsedData","response","wrap","_context","prev","next","safeParse","success","error","issues","fetch","TINYBIRD_API_BASE_URL","method","headers","Authorization","apiKey","Content-Type","body","abrupt","status","sent","t0","Error","stop","apply","arguments","this","_x"],"mappings":"8rNAEgBA,EAAOC,EAA4BC,GAC7CD,EAAOE,UAAUC,QAAQC,IAAIH,GCqClC,SAAAI,IAAA,OAAAA,EAAAC,EAAAC,IAAAC,MAnCM,SAAAC,EAAAC,GAAA,IAAAV,EAAAW,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAT,IAAAU,eAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAYoC,GAVzCT,EAAMD,EAANC,OACAC,EAAIF,EAAJE,KACAC,EAAUH,EAAVG,WACAC,EAAKJ,EAALI,MAKAf,EATAC,EAAMU,EAANV,OASe,gCAETe,EAAaJ,EAAOU,UAAUT,IACpBU,SAAOJ,EAAAE,OAAA,MAAA,KAAQ,CAAEG,MAAOR,EAAWQ,MAAMC,QAAQ,OAAA,OAAAN,EAAAC,OAAAD,EAAAE,OAGxCK,MAClBC,+CAA4Cb,MAAcC,EAC7D,CACEa,OAAQ,OACRC,QAAS,CACPC,wBAAyB7B,EAAO8B,OAChCC,eAAgB,qBAElBC,KAAMjB,EAAWH,OAEpB,OAVa,OAAAM,EAAAe,gBAWP,CACLC,QAZIlB,EAAQE,EAAAiB,MAYKD,OACjBlB,SAAAA,IACD,QAEqB,MAFrBE,EAAAC,QAAAD,EAAAkB,GAAAlB,WAEDnB,EAAOC,EAAMkB,EAAAkB,IACPC,MAAKnB,EAAAkB,IAAc,QAAA,UAAA,OAAAlB,EAAAoB,UAAA7B,sBAE5B8B,WAAAC,wFCnCC,SAAA9B,OAAsBR,EAAQQ,EAARR,SACpBuC,KAAKX,OADapB,EAANoB,OAEZW,KAAKvC,eAAWA,GAAAA,yBDFMwC,GAAA,OAAArC,EAAAkC,WAAAC"}